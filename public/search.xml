<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Jenkins如何自动化部署前端项目(安装Jenkins)</title>
    <url>/2023/08/01/jenkins/</url>
    <content><![CDATA[<h3 id="Jenkins如何自动化部署前端项目"><a href="#Jenkins如何自动化部署前端项目" class="headerlink" title="Jenkins如何自动化部署前端项目"></a>Jenkins如何自动化部署前端项目</h3><h4 id="1、安装JDK-11-这里我们通过yum-系统Centos-8-4-64"><a href="#1、安装JDK-11-这里我们通过yum-系统Centos-8-4-64" class="headerlink" title="1、安装JDK 11 这里我们通过yum 系统Centos 8.4.64"></a>1、安装JDK 11 这里我们通过yum 系统Centos 8.4.64</h4><ol>
<li>首先，确保你的系统已经更新到最新的软件包列表。可以运行以下命令来更新软件包列表：</li>
</ol>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">sudo yum update<br></code></pre></td></tr></table></figure>

<h6 id="安装JDK-11"><a href="#安装JDK-11" class="headerlink" title="安装JDK 11"></a>安装JDK 11</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">sudo yum install java-<span class="hljs-number">11</span>-openjdk-devel<br></code></pre></td></tr></table></figure>

<ol start="2">
<li>安装过程中，系统会提示你确认是否继续安装。输入<code>Y</code>并按下Enter键，然后等待安装完成。</li>
<li>安装完成后，可以使用以下命令来验证JDK 11的安装：</li>
</ol>
<h6 id="验证Java是否安装成功"><a href="#验证Java是否安装成功" class="headerlink" title="验证Java是否安装成功"></a>验证Java是否安装成功</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">java -version<br></code></pre></td></tr></table></figure>

<p>输出应该显示类似以下内容：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">openjdk version &quot;<span class="hljs-number">11</span>.x.x&quot; <span class="hljs-number">2021</span>-XX-XX<br>OpenJDK Runtime Environment (build <span class="hljs-number">11</span>.x.x+XX-XXXX)<br>OpenJDK <span class="hljs-number">64</span>-Bit Server VM (build <span class="hljs-number">11</span>.x.x+XX-XXXX, mixed <span class="hljs-built_in">mode</span>, sharing)<br></code></pre></td></tr></table></figure>

<h6 id="卸载Jdk"><a href="#卸载Jdk" class="headerlink" title="卸载Jdk"></a>卸载Jdk</h6><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd"># 查看CentOS自带JDK是否已安装:<br>yum list installed | grep java<br># 如果存在自带的jdk，删除自带的jdk<br>yum -y remove java-<span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-openjdk*<br>yum -y remove tzdata-java.noarch<br></code></pre></td></tr></table></figure>

<h4 id="2、安装Jenkins"><a href="#2、安装Jenkins" class="headerlink" title="2、安装Jenkins"></a>2、安装Jenkins</h4><p>首先，添加Jenkins的官方软件包源。打开终端窗口，并使用以下命令导入Jenkins的GPG密钥：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">sudo wget -O /etc/yum.repos.d/jenkins.repo \<br><span class="hljs-function">    https://<span class="hljs-title">pkg.jenkins.io</span>/<span class="hljs-title">redhat</span>/<span class="hljs-title">jenkins.repo</span></span><br><span class="hljs-function"></span><br><span class="hljs-function"><span class="hljs-title">sudo</span> <span class="hljs-title">rpm</span> --<span class="hljs-title">import</span> <span class="hljs-title">https</span>://<span class="hljs-title">pkg.jenkins.io</span>/<span class="hljs-title">redhat</span>/<span class="hljs-title">jenkins.io</span>-2023.<span class="hljs-title">key</span></span><br></code></pre></td></tr></table></figure>

<p>然后安装  安装过程中，系统会提示你确认是否继续安装。输入<code>Y</code>并按下Enter键，然后等待安装完成</p>
<p><code>sudo yum install jenkins</code></p>
<h6 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a>启动命令</h6><p>您可以使用以下命令启动 Jenkins 服务：</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">sudo systemctl <span class="hljs-built_in">start</span> jenkins<br></code></pre></td></tr></table></figure>

<h6 id="您可以使用以下命令检查-Jenkins-服务的状态："><a href="#您可以使用以下命令检查-Jenkins-服务的状态：" class="headerlink" title="您可以使用以下命令检查 Jenkins 服务的状态："></a>您可以使用以下命令检查 Jenkins 服务的状态：</h6><p><code>sudo systemctl status jenkins</code></p>
<p>如下：</p>
<p><img src="/img/demo.png" alt="图"></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>运维</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins如何自动化部署前端项目(2)</title>
    <url>/2023/08/01/jenkins2/</url>
    <content><![CDATA[<h3 id="Jenkins如何自动化部署前端项目"><a href="#Jenkins如何自动化部署前端项目" class="headerlink" title="Jenkins如何自动化部署前端项目"></a>Jenkins如何自动化部署前端项目</h3><p>前置步骤我们都操作完了，这篇开始介绍jenkins的是哟。话不多说，看操作(没安装的请看我主页有详细的安装教程)</p>
<p>1、登录进入jenkins后会让你选择安装插件，选择第一个默认的就行。</p>
<p>2、配置JDK和Git都需要执行路径，所以需要先把执行路径找到，先进入服务器的终端界面执行</p>
<blockquote>
<p>JDK的路径</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">echo $JAVA_HOME<br></code></pre></td></tr></table></figure>

<p>如果是空记得先去设置java的环境变量 <code>which java</code> 查看java的安装路径</p>
<p><img src="/img/j/1.png" alt="jdk路径"></p>
<blockquote>
<p>Git的路径</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">which git<br></code></pre></td></tr></table></figure>

<p><img src="/img/j/2.png" alt="git路径"></p>
<p>3、先配置JDK和Git。点击：Manage Jenkins&gt;&gt;Global Tool Configuration</p>
<p><img src="/img/j/3.png"></p>
<p><img src="/img/j/4.png"></p>
<p>选择JDK，别名随便填，JAVA_HOME填写查询到jdk的路径</p>
<p><img src="/img/j/5.png"></p>
<p>选择Git，Name随便填e填写2.2查询到git的路径，配置完成后点击应用，在点击保存。</p>
<p><img src="/img/j/6.png"></p>
<h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><p>安装插件，点击Manage Jenkins&gt;&gt;Manage Plugins，点击可选插件</p>
<p><img src="/img/j/7.png"></p>
<p><img src="/img/j/8.png"></p>
<p>安装 Gitee 插件，找到可选插件tab，搜索gitee<br><img src="/img/j/9.png"></p>
<p>安装 Maven 插件<br><img src="/img/j/10.png"></p>
<p>安装 Git Parameter Plug-In 插件，用于添加git参数<br><img src="/img/j/11.png"></p>
<p>安装 Environment Injector 插件，搜索 inject，此插件可以在shell脚本中可以使用 $a、$b等自定义环境变量<br><img src="/img/j/12.png"></p>
<p>安装 Publish over SSH 插件<br><img src="/img/j/13.png"></p>
<h4 id="必须要配置name和email，为了让每一次提交的代码都能配置到用户"><a href="#必须要配置name和email，为了让每一次提交的代码都能配置到用户" class="headerlink" title="必须要配置name和email，为了让每一次提交的代码都能配置到用户"></a>必须要配置name和email，为了让每一次提交的代码都能配置到用户</h4><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">git config --global user.name &quot;jenkins_git&quot;<br>git config --global user.email &quot;wuqi_y@<span class="hljs-number">163</span>.com&quot;<br></code></pre></td></tr></table></figure>

<p>生成证书 绑定gitee或者github</p>
<h2 id="SSH公钥"><a href="#SSH公钥" class="headerlink" title="SSH公钥"></a>SSH公钥</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext"># 生成ssh连接所需的证书<br>ssh-keygen -t rsa -C &quot;wuqi_y@163.com&quot;<br></code></pre></td></tr></table></figure>

<h3 id="将证书配置到git上。"><a href="#将证书配置到git上。" class="headerlink" title="将证书配置到git上。"></a>将证书配置到git上。</h3><p>  登录github或gitee，这里我以gitee为例，步骤如下：<br>  登录并进入gitee个人设置 – 点击“SSH公钥”侧边栏 – 输入标题 – 黏贴刚才在linux上生成id_rsa.pub文件内容后保存。</p>
<h3 id="添加Gitee配置（Manage-Jenkins-Configure-System-Gitee-配置）"><a href="#添加Gitee配置（Manage-Jenkins-Configure-System-Gitee-配置）" class="headerlink" title="添加Gitee配置（Manage Jenkins&gt;&gt;Configure System&gt;&gt;Gitee 配置）"></a>添加Gitee配置（Manage Jenkins&gt;&gt;Configure System&gt;&gt;Gitee 配置）</h3><p><img src="/img/j/14.png"></p>
<p><img src="/img/j/15.png"></p>
<p><img src="/img/j/16.png"></p>
<p><img src="/img/j/17.png"><br><img src="/img/j/18.png"><br><img src="/img/j/19.png"><br><img src="/img/j/20.png"><br><img src="/img/j/21.png"><br>可根据自己需要更改(记得安装Node哦)</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd"># 在执行过程中若遇到使用了未定义的变量或命令返回值为非零，将直接报错退出<br><span class="hljs-built_in">set</span> -eu<br><span class="hljs-built_in">echo</span> &quot;&lt;--------------------------------------&gt;&quot;<br>node -v<br><span class="hljs-built_in">echo</span> &quot;安装依赖&quot;<br>npm install<br><br><span class="hljs-built_in">echo</span> &quot;&lt;--------------------------------------&gt;&quot;<br><span class="hljs-built_in">echo</span> &quot;打包出dist文件夹&quot;<br>npm run build<br><br># 先删除nginx下的旧数据<br>sudo rm -rf /www/wwwroot/test-jenks/*<br># 再将新数据拷贝到nginx下<br>sudo cp -r dist/* /www/wwwroot/test-jenks/<br></code></pre></td></tr></table></figure>

<p>最后执行即可<br><img src="/img/j/22.png"></p>
]]></content>
      <tags>
        <tag>运维</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>关于微信前端支付在微信环境如何支付</title>
    <url>/2023/08/03/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/</url>
    <content><![CDATA[<h3 id="关于微信前端支付在微信环境如何支付"><a href="#关于微信前端支付在微信环境如何支付" class="headerlink" title="关于微信前端支付在微信环境如何支付"></a>关于微信前端支付在微信环境如何支付</h3><p>我们都知道在微信环境中是无法直接使用H5支付的，需要调取微信浏览器一些相关API去唤醒支付,相关链接如下：</p>
<p><a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&index=6">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_7&amp;index&#x3D;6</a></p>
<p><strong>注意：WeixinJSBridge内置对象在其他浏览器中无效。</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">function</span> <span class="hljs-title function_">onBridgeReady</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-title class_">WeixinJSBridge</span>.<span class="hljs-title function_">invoke</span>(<br>     <span class="hljs-string">&#x27;getBrandWCPayRequest&#x27;</span>, &#123;<br>        <span class="hljs-string">&quot;appId&quot;</span>:<span class="hljs-string">&quot;wx2421b1c4370ec43b&quot;</span>,     <span class="hljs-comment">//公众号ID，由商户传入   </span><br>        <span class="hljs-string">&quot;timeStamp&quot;</span>:<span class="hljs-string">&quot;1395712654&quot;</span>,         <span class="hljs-comment">//时间戳，自1970年以来的秒数   </span><br>        <span class="hljs-string">&quot;nonceStr&quot;</span>:<span class="hljs-string">&quot;e61463f8efa94090b1f366cccfbbb444&quot;</span>, <span class="hljs-comment">//随机串   </span><br>        <span class="hljs-string">&quot;package&quot;</span>:<span class="hljs-string">&quot;prepay_id=u802345jgfjsdfgsdg888&quot;</span>,   <br>        <span class="hljs-string">&quot;signType&quot;</span>:<span class="hljs-string">&quot;MD5&quot;</span>,         <span class="hljs-comment">//微信签名方式：   </span><br>        <span class="hljs-string">&quot;paySign&quot;</span>:<span class="hljs-string">&quot;70EA570631E4BB79628FBCA90534C63FF7FADD89&quot;</span> <span class="hljs-comment">//微信签名 </span><br>     &#125;,<br>     <span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>)&#123;<br>     <span class="hljs-keyword">if</span>(res.<span class="hljs-property">err_msg</span> == <span class="hljs-string">&quot;get_brand_wcpay_request:ok&quot;</span> )&#123;<br>     <span class="hljs-comment">// 使用以上方式判断前端返回,微信团队郑重提示：</span><br>           <span class="hljs-comment">//res.err_msg将在用户支付成功后返回ok，但并不保证它绝对可靠。</span><br>     &#125; <br>  &#125;); <br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">WeixinJSBridge</span> == <span class="hljs-string">&quot;undefined&quot;</span>)&#123;<br>  <span class="hljs-keyword">if</span>( <span class="hljs-variable language_">document</span>.<span class="hljs-property">addEventListener</span> )&#123;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;WeixinJSBridgeReady&#x27;</span>, onBridgeReady, <span class="hljs-literal">false</span>);<br>  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">attachEvent</span>)&#123;<br>      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">attachEvent</span>(<span class="hljs-string">&#x27;WeixinJSBridgeReady&#x27;</span>, onBridgeReady); <br>      <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">attachEvent</span>(<span class="hljs-string">&#x27;onWeixinJSBridgeReady&#x27;</span>, onBridgeReady);<br>  &#125;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>  <span class="hljs-title function_">onBridgeReady</span>();<br>&#125;<br></code></pre></td></tr></table></figure>

<p>那后端支付的时候是需要用户的<strong>appid</strong>的那这时候我们在客户端应该如何获取呢？其实微信官方文档有很详细的解说：</p>
<p><a href="https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html">https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps&#x2F;Wechat_webpage_authorization.html</a></p>
<p>我们是要走网页授权的方式只获取appid的话可以走无感授权，如果需要获取用户详细信息则需要用户手动点击</p>
<blockquote>
<p>网页授权流程分为四步：<br>引导用户进入授权页面同意授权，获取code<br>通过code换取网页授权access_token（与基础支持中的access_token不同）<br>如果需要，开发者可以刷新网页授权access_token，避免过期<br>通过网页授权access_token和openid获取用户基本信息（支持UnionID机制）</p>
</blockquote>
<p>然后我们可以通过H5静默授权获得到唯一的<strong>code</strong>码然后传给后端，后端去拿这个<strong>code</strong>码去换取用户的<strong>appid</strong>（因为前端优有跨域），然后就可以调取我前面说的API去唤醒支付了</p>
]]></content>
      <tags>
        <tag>前端</tag>
        <tag>支付</tag>
      </tags>
  </entry>
  <entry>
    <title>无标题</title>
    <url>/2023/10/24/%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>测试</p>
]]></content>
  </entry>
  <entry>
    <title>Windows操作系统生成SSH密钥</title>
    <url>/2023/11/02/Windows%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%94%9F%E6%88%90SSH%E5%AF%86%E9%92%A5/</url>
    <content><![CDATA[<p><strong>在Windows上生成SSH密钥可以通过以下简单步骤：</strong></p>
<ol>
<li>创建公钥（如果在cmd窗口不可执行，请下载gitbash执行）</li>
</ol>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">ssh-keygen -t rsa -C &quot;youremail@example.com&quot;<br></code></pre></td></tr></table></figure>

<ol start="2">
<li>输入完毕后按回车，到底即可，此时 c盘——用户——用户名——.ssh文件夹 里面生成好了“id_rsa”和“id_rsa.pub”文件（<em>不一定是一样的位置，会有提示请以自己的目录为准</em>）。</li>
<li>将公钥添加到需要访问的服务器上的authorized_keys文件中。</li>
<li>使用私钥进行SSH连接。</li>
</ol>
]]></content>
      <tags>
        <tag>windowns</tag>
      </tags>
  </entry>
  <entry>
    <title>如何查看npm的镜像信息</title>
    <url>/2023/11/02/%E6%9F%A5%E7%9C%8Bnpm%E7%9A%84%E9%95%9C%E5%83%8F%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>要查看npm的镜像信息，你可以使用<code>npm config get registry</code>命令。这个命令会返回当前配置的npm镜像地址。</p>
<p>如果你想要切换npm的镜像源，有以下几种选择：</p>
<ul>
<li><code>npm config set registry &lt;registry-url&gt;</code>：将npm的镜像源设置为指定的<code>&lt;registry-url&gt;</code>。</li>
<li><code>npm config delete registry</code>：删除已设置的npm镜像源，恢复默认的官方源。</li>
</ul>
<p>常见的npm镜像源包括：</p>
<ul>
<li>官方源（<a href="https://registry.npmjs.org/%EF%BC%89">https://registry.npmjs.org/）</a></li>
<li>淘宝NPM镜像源（<a href="https://registry.npm.taobao.org/%EF%BC%89">https://registry.npm.taobao.org/）</a></li>
<li>cnpmjs镜像源（<a href="https://r.cnpmjs.org/%EF%BC%89">https://r.cnpmjs.org/）</a></li>
</ul>
<p>使用合适的npm镜像源可以加快依赖包的下载速度，提高开发效率。</p>
]]></content>
      <tags>
        <tag>npm</tag>
      </tags>
  </entry>
  <entry>
    <title>如何让部署Qexo后台</title>
    <url>/2023/11/13/%E5%A6%82%E4%BD%95%E8%AE%A9%E9%83%A8%E7%BD%B2Qexo%E5%90%8E%E5%8F%B0/</url>
    <content><![CDATA[<h4 id="首先查看Python和pip3的版本，如果不对应最好安装如图中的版本不容易出错"><a href="#首先查看Python和pip3的版本，如果不对应最好安装如图中的版本不容易出错" class="headerlink" title="首先查看Python和pip3的版本，如果不对应最好安装如图中的版本不容易出错"></a>首先查看Python和pip3的版本，如果不对应最好安装如图中的版本不容易出错</h4><p><img src="/img/a/py_v.png" alt="python和pip3版本"></p>
<h3 id="编辑配置"><a href="#编辑配置" class="headerlink" title="编辑配置"></a>编辑配置</h3><p>以使用 Mysql 为例, 确认好安装相关依赖后在<code>manage.py</code>的同级目录下创建并修改 <code>configs.py</code></p>
<figure class="highlight python"><table><tr><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> pymysql<br>pymysql.install_as_MySQLdb()<br>DOMAINS = [<span class="hljs-string">&quot;127.0.0.1&quot;</span>, <span class="hljs-string">&quot;yoursite.com&quot;</span>]<br>DATABASES = &#123;<br>    <span class="hljs-string">&#x27;default&#x27;</span>: &#123;<br>            <span class="hljs-string">&#x27;ENGINE&#x27;</span>: <span class="hljs-string">&#x27;django.db.backends.mysql&#x27;</span>,<br>            <span class="hljs-string">&#x27;NAME&#x27;</span>: <span class="hljs-string">&#x27;qexo&#x27;</span>,<br>            <span class="hljs-string">&#x27;USER&#x27;</span>: <span class="hljs-string">&#x27;root&#x27;</span>,<br>            <span class="hljs-string">&#x27;PASSWORD&#x27;</span>: <span class="hljs-string">&#x27;password&#x27;</span>,<br>            <span class="hljs-string">&#x27;HOST&#x27;</span>: <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>,<br>            <span class="hljs-string">&#x27;PORT&#x27;</span>: <span class="hljs-string">&#x27;3306&#x27;</span>,<br>            <span class="hljs-string">&#x27;OPTIONS&#x27;</span>: &#123;<br>                <span class="hljs-string">&quot;init_command&quot;</span>: <span class="hljs-string">&quot;SET sql_mode=&#x27;STRICT_TRANS_TABLES&#x27;&quot;</span><br>            &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure>

<p>然后在项目根目录执行如下</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">pip3 install -r requirements.txt<br>python3 manage.py makemigrations<br>python3 manage.py migrate<br>python3 manage.py runserver <span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>:<span class="hljs-number">8000</span> --noreload<br></code></pre></td></tr></table></figure>


<h5 id="如果pip3-install-r-requirements-txt-时报错了，查看此文件夹，替换如下requirements-txt"><a href="#如果pip3-install-r-requirements-txt-时报错了，查看此文件夹，替换如下requirements-txt" class="headerlink" title="如果pip3 install -r requirements.txt 时报错了，查看此文件夹，替换如下requirements.txt"></a>如果<code>pip3 install -r requirements.txt</code> 时报错了，查看此文件夹，替换如下requirements.txt</h5><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">Django==<span class="hljs-number">3</span>.<span class="hljs-number">2</span>.<span class="hljs-number">18</span><br>PyMySQL<br>boto3<br>requests<br>PyGithub<br>python-gitlab<br>html2text<br>PyYAML<br>urllib3<br>Markdown<br>djongo<br>django-cors-headers<br>pymongo<br>dnspython<br>sqlparse<br>psycopg2-binary<br>cryptography<br>pyopenssl<br>oss2<br>beautifulsoup4<br></code></pre></td></tr></table></figure>

<p>最后在ip下加8000端口查看能否进入项目</p>
<h4 id="常驻项目进程"><a href="#常驻项目进程" class="headerlink" title="常驻项目进程"></a>常驻项目进程</h4><p><code>nohup python3 manage.py runserver 0.0.0.0:8000 --noreload</code></p>
]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>qexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue+Ts自定义封装日期组件</title>
    <url>/2023/11/23/Vue+Ts%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B0%81%E8%A3%85%E6%97%A5%E6%9C%9F%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<p>至于为啥不用组件库的日期组件而费劲的自己去封装一个勒？说多了都是泪，由于公司UI和常用的组件库的样式和一些操作交互有些差别，试了一通发现都不能实现业务需求，干脆手撸一个吧！</p>
<p>先来看看实现效果吧</p>
<p><a href="https://imgse.com/i/pidTYWV"><img src="https://z1.ax1x.com/2023/11/23/pidTYWV.png" alt="pidTYWV.png"></a></p>
<p><a href="https://imgse.com/i/pidTtzT"><img src="https://z1.ax1x.com/2023/11/23/pidTtzT.png" alt="pidTtzT.png"></a></p>
<p><a href="https://imgse.com/i/pidTsF1"><img src="https://z1.ax1x.com/2023/11/23/pidTsF1.png" alt="pidTsF1.png"></a></p>
<p>话不多说直接上代码！</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;template&gt;<br>  &lt;div class=&quot;date-picker relative&quot; ref=&quot;date_picker&quot;&gt;<br>    &lt;div<br>      class=&quot;input-date w-36 h-8 rounded overflow-hidden relative&quot;<br>      :style=&quot;&#123; backgroundColor: &#x27;#2B2D3A&#x27; &#125;&quot;<br>    &gt;<br>      &lt;input<br>        type=&quot;text&quot;<br>        class=&quot;border-none outline-none w-full h-full px-3&quot;<br>        :style=&quot;&#123; backgroundColor: &#x27;#2B2D3A&#x27; &#125;&quot;<br>        placeholder=&quot;请选择日期&quot;<br>        @blur=&quot;BlurHandel&quot;<br>        @focus=&quot;FocusHandel&quot;<br>        v-model=&quot;value&quot;<br>      /&gt;<br>      &lt;i<br>        class=&quot;iconfont cursor-pointer text-white absolute right-2 top-1/2 -translate-y-1/2&quot;<br>        :class=&quot;icon&quot;<br>        @mouseenter=&quot;iconMouenterHandel&quot;<br>        @mouseleave=&quot;icon = &#x27;icon-rili&#x27;&quot;<br>        @click=&quot;iconClickHandel&quot;<br>      &gt;&lt;/i&gt;<br>    &lt;/div&gt;<br>    &lt;div ref=&quot;calendar&quot; class=&quot;calendar-card&quot; v-show=&quot;isFoucus&quot;&gt;<br>      &lt;div class=&quot;flex w-full h-9 justify-between items-center&quot; :style=&quot;&#123; color: &#x27;#000&#x27; &#125;&quot;&gt;<br>        &lt;!-- 上一年 --&gt;<br>        &lt;button v-if=&quot;isPreYear&quot; @click=&quot;minusYear(true)&quot;&gt;<br>          &lt;i class=&quot;iconfont icon-zuojiantou&quot;&gt;&lt;/i&gt;<br>        &lt;/button&gt;<br>        &lt;!-- 上一月 --&gt;<br>        &lt;button @click=&quot;minusMonth&quot; v-if=&quot;isPreMonth&quot;&gt; &lt; &lt;/button&gt;<br>        &lt;div class=&quot;_button&quot; @mouseover=&quot;isYearShow = true&quot; @mouseout=&quot;isYearShow = false&quot;&gt;<br>          &lt;span&gt; &#123;&#123; date.year &#125;&#125;年&lt;/span&gt;<br>          &lt;div class=&quot;box_year&quot; v-show=&quot;isYearShow&quot;&gt;<br>            &lt;ul&gt;<br>              &lt;li<br>                :class=&quot;&#123; active: date.year === year &#125;&quot;<br>                v-for=&quot;(year, index) in yearList&quot;<br>                :key=&quot;year&quot;<br>                @click=&quot;clickCurrentYearHandel(year, index)&quot;<br>                &gt;&#123;&#123; year &#125;&#125;&lt;/li<br>              &gt;<br>            &lt;/ul&gt;<br>          &lt;/div&gt;<br>          &lt;!-- &#123;&#123; date.date &#125;&#125; --&gt;<br>        &lt;/div&gt;<br>        &lt;div class=&quot;_button&quot; @mouseover=&quot;isMouthShow = true&quot; @mouseout=&quot;isMouthShow = false&quot;&gt;<br>          &lt;span&gt; &#123;&#123; (date.month as number) + 1 &#125;&#125;月&lt;/span&gt;<br>          &lt;div class=&quot;box_month&quot; v-show=&quot;isMouthShow&quot;&gt;<br>            &lt;ul&gt;<br>              &lt;li<br>                :class=&quot;&#123; active: (date.month as number) + 1 === m &#125;&quot;<br>                v-for=&quot;(m, index) in monthList&quot;<br>                :key=&quot;m&quot;<br>                @click=&quot;clickCurrentMonthHandel(m, index)&quot;<br>                &gt;&#123;&#123; m &#125;&#125;月&lt;/li<br>              &gt;<br>            &lt;/ul&gt;<br>          &lt;/div&gt;<br>        &lt;/div&gt;<br>        &lt;!-- 下一月 --&gt;<br>        &lt;button @click=&quot;plusMonth&quot; v-if=&quot;isNextMonth&quot;&gt;&gt;&lt;/button&gt;<br>        &lt;!-- 下一年 --&gt;<br>        &lt;button @click=&quot;plusYear(true)&quot; v-if=&quot;isNextYear&quot;&gt;<br>          &lt;i class=&quot;iconfont icon-youjiantou&quot;&gt;&lt;/i&gt;<br>        &lt;/button&gt;<br>      &lt;/div&gt;<br>      &lt;div class=&quot;calendar-content&quot;&gt;<br>        &lt;ul class=&quot;ul-week&quot;&gt;<br>          &lt;li class=&quot;li-week&quot; v-for=&quot;item in week&quot; :key=&quot;item&quot;&gt;&#123;&#123; item &#125;&#125;&lt;/li&gt;<br>        &lt;/ul&gt;<br>        &lt;ul class=&quot;ul-day&quot;&gt;<br>          &lt;li<br>            class=&quot;li-day&quot;<br>            v-for=&quot;(item, index) in days&quot;<br>            :key=&quot;index&quot;<br>            :isThisMonth=&quot;item?.isThisMonth&quot;<br>            @click=&quot;handleClick(item)&quot;<br>          &gt;<br>            &#123;&#123; item?.date &#125;&#125;<br>          &lt;/li&gt;<br>        &lt;/ul&gt;<br>      &lt;/div&gt;<br>      &lt;div class=&quot;footer&quot;&gt;<br>        &lt;ul&gt;<br>          &lt;li @click=&quot;clearAllHandel&quot;&gt;清空&lt;/li&gt;<br>          &lt;li @click=&quot;currentTodayHandel&quot;&gt;今天&lt;/li&gt;<br>          &lt;li @click=&quot;okHandel&quot;&gt;确定&lt;/li&gt;<br>        &lt;/ul&gt;<br>      &lt;/div&gt;<br>    &lt;/div&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script lang=&quot;ts&quot; setup&gt;<br>  import &#123; unref, watch, computed, ref, reactive, onMounted, onUnmounted &#125; from &#x27;vue&#x27;;<br>  import &#123; Idate, IDateDate &#125; from &#x27;../props&#x27;;<br><br>  defineOptions(&#123;<br>    name: &#x27;DatePicker&#x27;,<br>  &#125;);<br><br>  defineProps(&#123;<br>    /*是否显示上一月箭头 */<br>    isPreMonth: &#123;<br>      type: Boolean as PropType&lt;boolean&gt;,<br>      default: false,<br>    &#125;,<br>    /*是否显示下一月箭头 */<br>    isNextMonth: &#123;<br>      type: Boolean as PropType&lt;boolean&gt;,<br>      default: false,<br>    &#125;,<br>    /*是否显示上一年箭头 */<br>    isPreYear: &#123;<br>      type: Boolean as PropType&lt;boolean&gt;,<br>      default: true,<br>    &#125;,<br>    /*是否显示下一年箭头 */<br>    isNextYear: &#123;<br>      type: Boolean as PropType&lt;boolean&gt;,<br>      default: true,<br>    &#125;,<br>  &#125;);<br><br>  const emit = defineEmits([&#x27;change&#x27;, &#x27;ok&#x27;]);<br><br>  const isYearShow = ref(false);<br>  const isMouthShow = ref(false);<br>  const isActiveLi = ref&lt;any&gt;(null);<br>  const isActiveLiM = ref&lt;any&gt;(null);<br>  const isFoucus = ref(false);<br>  const value = ref&lt;string | undefined&gt;(&#x27;&#x27;);<br>  const calendar = ref(null);<br>  const date_picker = ref(null);<br>  const icon = ref(&#x27;icon-rili&#x27;);<br><br>  const monthList = ref([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);<br><br>  const date: Idate = reactive(&#123;<br>    year: &#x27;&#x27;,<br>    month: &#x27;&#x27;,<br>    date: &#x27;&#x27;,<br>    h: 0,<br>    m: 0,<br>    s: 0,<br>  &#125;);<br><br>  const current: Idate = reactive(&#123;<br>    year: &#x27;&#x27;,<br>    month: &#x27;&#x27;,<br>    date: &#x27;&#x27;,<br>    h: 0,<br>    m: 0,<br>    s: 0,<br>  &#125;);<br><br>  const yearList = computed(() =&gt; &#123;<br>    let d = new Date();<br>    let list: Array&lt;number&gt; = [d.getFullYear() as number];<br>    for (let i = 1; i &lt; 10; i++) &#123;<br>      list.push((d.getFullYear() as number) - i);<br>    &#125;<br>    return list;<br>  &#125;);<br><br>  const week = [&#x27;日&#x27;, &#x27;一&#x27;, &#x27;二&#x27;, &#x27;三&#x27;, &#x27;四&#x27;, &#x27;五&#x27;, &#x27;六&#x27;];<br><br>  const days = ref&lt;Array&lt;Idate&gt;&gt;([]);<br><br>  const cache = ref(&#x27;&#x27;);<br><br>  const bodyClickHandel = (e: MouseEvent) =&gt; &#123;<br>    if ((date_picker.value as unknown as HTMLElement).contains(e.target as HTMLElement)) &#123;<br>      return;<br>    &#125;<br>    if (isFoucus.value) &#123;<br>      console.log(&#x27;关闭&#x27;);<br>      close();<br>    &#125;<br>  &#125;;<br><br>  onMounted(() =&gt; &#123;<br>    initDate();<br>    document.body.addEventListener(&#x27;click&#x27;, bodyClickHandel);<br>  &#125;);<br><br>  onUnmounted(() =&gt; &#123;<br>    document.body.removeEventListener(&#x27;click&#x27;, bodyClickHandel);<br>  &#125;);<br><br>  /**<br>   * 初始化日期（年月日）<br>   */<br>  const initDate = () =&gt; &#123;<br>    let d = new Date();<br>    date.year = d.getFullYear();<br>    date.month = d.getMonth();<br>    date.date = d.getDate();<br><br>    current.year = d.getFullYear();<br>    current.month = d.getMonth();<br>    current.date = d.getDate();<br><br>    createCalendar(current.year, current.month);<br>  &#125;;<br><br>  /**<br>   * 初始化时间（时分秒）<br>   */<br>  const initTime = () =&gt; &#123;<br>    let d = new Date();<br>    date.h = d.getHours();<br>    date.m = d.getMinutes();<br>    date.s = d.getMilliseconds();<br><br>    current.h = d.getHours();<br>    current.m = d.getMinutes();<br>    current.s = d.getMilliseconds().toString().padStart(3, &#x27;0&#x27;).slice(0, 2);<br>  &#125;;<br><br>  /**<br>   * 格式话时间<br>   */<br>  const getCurrentTime = (hours, minutes, seconds) =&gt; &#123;<br>    let strDate = &#x27;&#x27;;<br>    if (!hours &amp;&amp; !minutes &amp;&amp; !seconds) &#123;<br>      const now = new Date();<br>      let hours: number | string = now.getHours();<br>      let minutes: number | string = now.getMinutes();<br>      let seconds: number | string = now.getSeconds();<br>      hours = hours &lt; 10 ? &#x27;0&#x27; + hours : hours;<br>      minutes = minutes &lt; 10 ? &#x27;0&#x27; + minutes : minutes;<br>      seconds = seconds &lt; 10 ? &#x27;0&#x27; + seconds : seconds;<br>      strDate = `$&#123;hours&#125;:$&#123;minutes&#125;:$&#123;seconds&#125;`;<br>    &#125; else if (hours &amp;&amp; minutes &amp;&amp; seconds) &#123;<br>      hours = hours &lt; 10 ? &#x27;0&#x27; + hours : hours;<br>      minutes = minutes &lt; 10 ? &#x27;0&#x27; + minutes : minutes;<br>      seconds = seconds &lt; 10 ? &#x27;0&#x27; + seconds : seconds;<br>      strDate = `$&#123;hours&#125;:$&#123;minutes&#125;:$&#123;seconds&#125;`;<br>    &#125;<br><br>    return strDate;<br>  &#125;;<br><br>  /**<br>   * 校验日期格式<br>   */<br>  const checkDateFormat = (dateString: string) =&gt; &#123;<br>    const pattern = /^(\d&#123;4&#125;)-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])$/;<br>    return pattern.test(dateString);<br>  &#125;;<br><br>  /**<br>   * 需要返回的日期数据<br>   */<br>  const selectDate = computed(() =&gt; &#123;<br>    if (!current.date) return null;<br>    return &#123;<br>      $d: new Date(<br>        `$&#123;current.year&#125;-$&#123;<br>          current.month.toString().length &lt;= 1<br>            ? &#x27;0&#x27; + ((current.month as number) + 1).toString()<br>            : (current.month as number) + 1<br>        &#125;-$&#123;<br>          current.date.toString().length &lt;= 1 ? &#x27;0&#x27; + current.date.toString() : current.date<br>        &#125; $&#123;getCurrentTime(current.h, current.m, current.s)&#125;`,<br>      ),<br>      $Y: current.year,<br>      $M: current.month,<br>      $D: current.date,<br>      $H: current.h,<br>      $m: current.m,<br>      $s: current.s,<br>      $date: `$&#123;current.year&#125;-$&#123;<br>        current.month.toString().length &lt;= 1<br>          ? &#x27;0&#x27; + ((current.month as number) + 1).toString()<br>          : (current.month as number) + 1<br>      &#125;-$&#123;current.date.toString().length &lt;= 1 ? &#x27;0&#x27; + current.date.toString() : current.date&#125;`,<br>      $time: getCurrentTime(current.h, current.m, current.s),<br>    &#125; as IDateDate;<br>  &#125;);<br><br>  watch(<br>    () =&gt; selectDate.value,<br>    (o) =&gt; &#123;<br>      emit(&#x27;change&#x27;, o);<br>    &#125;,<br>  );<br><br>  /**<br>   * 监听输入变化 更新日期并重新渲染<br>   */<br>  watch(<br>    () =&gt; value.value,<br>    (v: any) =&gt; &#123;<br>      if (!checkDateFormat(v)) return;<br><br>      cache.value = v;<br><br>      let d = new Date(v);<br>      current.year = d.getFullYear();<br>      current.month = d.getMonth();<br>      current.date = d.getDate();<br><br>      date.year = d.getFullYear();<br>      date.month = d.getMonth();<br>      date.date = d.getDate();<br>      createCalendar(current.year, current.month);<br>    &#125;,<br>  );<br><br>  /**<br>   * 有值 hover时显示清楚按钮<br>   */<br>  const iconMouenterHandel = () =&gt; &#123;<br>    if (unref(value)) &#123;<br>      icon.value = &#x27;icon-chacha&#x27;;<br>    &#125;<br>  &#125;;<br><br>  /**<br>   * 点击清楚<br>   */<br>  const iconClickHandel = () =&gt; &#123;<br>    value.value = &#x27;&#x27;;<br>    clearAllHandel();<br>  &#125;;<br><br>  /**<br>   * 失去焦点<br>   */<br>  const BlurHandel = () =&gt; &#123;<br>    if (!checkDateFormat(unref(value) as string)) &#123;<br>      if (cache.value) &#123;<br>        value.value = unref(cache);<br>      &#125; else &#123;<br>        value.value = &#x27;&#x27;;<br>      &#125;<br>    &#125;<br>  &#125;;<br><br>  /**<br>   * 获取焦点<br>   */<br>  const FocusHandel = () =&gt; &#123;<br>    isFoucus.value = true;<br>    (calendar.value as unknown as HTMLElement).style.animation = &#x27;fade .3s forwards&#x27;;<br>  &#125;;<br><br>  /**<br>   * 点击日历 天<br>   */<br>  const handleClick = (item: Idate) =&gt; &#123;<br>    current.year = item.year;<br>    current.month = item.month;<br>    current.date = item.date;<br>    current.h = &#x27;23&#x27;;<br>    current.m = &#x27;59&#x27;;<br>    current.s = &#x27;59&#x27;;<br>    createCalendar(item.year, item.month);<br>  &#125;;<br><br>  /**<br>   * 选择年<br>   */<br>  const clickCurrentYearHandel = (cur: number, index: number) =&gt; &#123;<br>    isActiveLi.value = index;<br>    (date.year as number) = cur;<br>    createCalendar(date.year, date.month);<br>  &#125;;<br><br>  /**<br>   * 选择月<br>   */<br>  const clickCurrentMonthHandel = (cur: number, index: number) =&gt; &#123;<br>    isActiveLiM.value = index;<br>    (date.month as number) = cur - 1;<br>    createCalendar(date.year, date.month);<br>  &#125;;<br><br>  /**<br>   * 清空<br>   */<br>  const clearAllHandel = () =&gt; &#123;<br>    current.date = &#x27;&#x27;;<br>    current.h = 0;<br>    current.m = 0;<br>    current.s = 0;<br>    createCalendar(current.year, current.month);<br>    okHandel();<br>  &#125;;<br><br>  /**<br>   * 关闭<br>   */<br>  const close = () =&gt; &#123;<br>    setTimeout(() =&gt; &#123;<br>      (calendar.value as unknown as HTMLElement).style.animation = &#x27;fade_up .4s forwards&#x27;;<br>    &#125;, 150);<br>    setTimeout(() =&gt; &#123;<br>      isFoucus.value = false;<br>    &#125;, 500);<br>  &#125;;<br><br>  /**<br>   * 点击今天<br>   */<br>  const currentTodayHandel = () =&gt; &#123;<br>    initDate();<br>    initTime();<br>    okHandel();<br>  &#125;;<br><br>  /**<br>   * 点击确认<br>   */<br>  const okHandel = () =&gt; &#123;<br>    close();<br>    emit(&#x27;ok&#x27;, selectDate.value);<br>    value.value = selectDate.value?.$date;<br>  &#125;;<br><br>  /**<br>   * 下一月<br>   */<br>  const plusMonth = () =&gt; &#123;<br>    // 月数到12 加一年<br>    if (date.month === 11) &#123;<br>      date.month = 0;<br>      plusYear(false);<br>    &#125; else &#123;<br>      (date.month as number)++;<br>    &#125;<br>    createCalendar(date.year, date.month);<br>  &#125;;<br><br>  /**<br>   * 上一月<br>   */<br>  const minusMonth = () =&gt; &#123;<br>    // 月数到0 减一年<br>    if (date.month === 0) &#123;<br>      date.month = 11;<br>      minusYear(false);<br>    &#125; else &#123;<br>      (date.month as number)--;<br>    &#125;<br>    createCalendar(date.year, date.month);<br>  &#125;;<br><br>  /**<br>   * 下一年<br>   */<br>  const plusYear = (create) =&gt; &#123;<br>    if (date.year === 2099) &#123;<br>      date.year = 1970;<br>    &#125; else &#123;<br>      (date.year as number)++;<br>    &#125;<br>    if (create) &#123;<br>      createCalendar(date.year, date.month);<br>    &#125;<br>  &#125;;<br><br>  /**<br>   * 上一年<br>   */<br>  const minusYear = (create) =&gt; &#123;<br>    if (date.year == 1970) &#123;<br>      date.year = 2099;<br>    &#125; else &#123;<br>      (date.year as number)--;<br>    &#125;<br>    if (create) &#123;<br>      createCalendar(date.year, date.month);<br>    &#125;<br>  &#125;;<br><br>  /**<br>   * 创建日历表<br>   */<br>  const createCalendar = (year: string | number, month: string | number) =&gt; &#123;<br>    let d = new Date();<br>    d.setFullYear(year as number);<br>    d.setMonth(month as number);<br>    d.setDate(1);<br>    let dayOfFirstDay = d.getDay();<br>    days.value = [];<br><br>    for (let i = 0; i &lt; 42; i++) &#123;<br>      d.setDate(1);<br>      d.setMonth(month as number);<br>      d.setDate(i - dayOfFirstDay + 1);<br><br>      let isThisMonth = 1;<br>      if (d.getMonth() == month) &#123;<br>        isThisMonth = 2;<br>      &#125; else &#123;<br>        isThisMonth = 1;<br>      &#125;<br><br>      if (<br>        current.date == d.getDate() &amp;&amp;<br>        current.month == d.getMonth() &amp;&amp;<br>        current.year == d.getFullYear()<br>      ) &#123;<br>        isThisMonth = 3;<br>        let date: Idate = &#123;<br>          year: year,<br>          month: month,<br>          date: d.getDate(),<br>          isThisMonth: isThisMonth,<br>        &#125;;<br>        days.value.push(date);<br>      &#125; else &#123;<br>        let date = &#123;<br>          year: d.getFullYear(),<br>          month: d.getMonth(),<br>          date: d.getDate(),<br>          isThisMonth: isThisMonth,<br>        &#125;;<br><br>        days.value.push(date);<br>      &#125;<br>    &#125;<br>  &#125;;<br>&lt;/script&gt;<br><br>&lt;style&gt;<br>  /* stylelint-disable-next-line keyframes-name-pattern */<br>  @keyframes fade_up &#123;<br>    0% &#123;<br>      opacity: 1;<br>    &#125;<br><br>    100% &#123;<br>      opacity: 0;<br>    &#125;<br>  &#125;<br><br>  @keyframes fade &#123;<br>    0% &#123;<br>      opacity: 0;<br>    &#125;<br><br>    100% &#123;<br>      opacity: 1;<br>    &#125;<br>  &#125;<br>&lt;/style&gt;<br><br>&lt;style scoped lang=&quot;less&quot;&gt;<br>  .calendar-card &#123;<br>    @keyframes fade &#123;<br>      0% &#123;<br>        opacity: 0;<br>      &#125;<br><br>      100% &#123;<br>        opacity: 1;<br>      &#125;<br>    &#125;<br><br>    position: absolute;<br>    z-index: 999;<br>    top: 40px;<br>    left: 50%;<br>    width: 310px;<br>    height: 293px;<br>    padding: 0 10px;<br>    transform: translateX(-50%);<br>    animation: fade 0.5s forwards;<br>    border: 1px solid #ebeef5;<br>    border-radius: 10px;<br>    background-color: #fff;<br><br>    ._button &#123;<br>      position: relative;<br>      padding: 5px 8px;<br>      border-radius: 5px;<br>      cursor: pointer;<br><br>      &amp;:hover &#123;<br>        background-color: #e7ebf5;<br>      &#125;<br><br>      .box_year,<br>      .box_month &#123;<br>        position: absolute;<br>        z-index: 9;<br>        top: 18px;<br>        left: 50%;<br>        width: 114px;<br>        height: 159px;<br>        padding-top: 10px;<br>        transform: translateX(-50%);<br>        animation: fade 0.3s forwards;<br><br>        ul &#123;<br>          display: flex;<br>          flex-wrap: wrap;<br>          height: 156px;<br>          padding: 16px;<br>          border: 1px solid #d3d3dd;<br>          border-radius: 5px;<br>          background-color: #fff;<br>          box-shadow: 0 3px 7px 0 #ddd8d8;<br><br>          li &#123;<br>            width: 36px;<br>            height: 22px;<br>            margin-right: 5px;<br>            margin-bottom: 4px;<br>            color: #000;<br>            line-height: 22px;<br>            text-align: center;<br><br>            &amp;:hover &#123;<br>              border-radius: 5px;<br>              background-color: #e7ebf5;<br>            &#125;<br><br>            &amp;.active &#123;<br>              border-radius: 5px;<br>              background-color: #1c67e5;<br>              color: #fff;<br>              // font-size: 12px;<br>            &#125;<br><br>            &amp;:nth-child(2n) &#123;<br>              margin-right: 0;<br>            &#125;<br>          &#125;<br>        &#125;<br>      &#125;<br><br>      .box_month &#123;<br>        width: 114px;<br>        height: 178px;<br><br>        ul &#123;<br>          height: 178px;<br>        &#125;<br>      &#125;<br>    &#125;<br><br>    &gt; div &#123;<br>      button &#123;<br>        background-color: transparent !important;<br>        cursor: pointer;<br><br>        &amp;:hover &#123;<br>          background-color: #e7ebf5;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br><br>  .footer &#123;<br>    margin-top: 5px;<br>    color: #000;<br><br>    ul &#123;<br>      display: flex;<br>      justify-content: end;<br>      margin-right: 10px;<br>      margin-bottom: 0;<br><br>      li &#123;<br>        margin-left: 10px;<br>        padding: 3px 8px;<br>        border: 1px solid #999;<br>        border-radius: 5px;<br>        font-size: 12px;<br>        cursor: pointer;<br><br>        &amp;:last-child &#123;<br>          background-color: #1c67e5;<br>          color: #fff;<br>        &#125;<br>      &#125;<br>    &#125;<br>  &#125;<br><br>  .calendar-bar &#123;<br>    height: 40px;<br>    color: #727272;<br>    line-height: 40px;<br>    text-align: center;<br><br>    /* background-color: #ebeef5; */<br>    button &#123;<br>      i &#123;<br>        color: #333;<br>      &#125;<br>    &#125;<br>  &#125;<br><br>  .button &#123;<br>    border: none;<br>    background-color: transparent;<br>  &#125;<br><br>  .button:hover &#123;<br>    background-color: #eee;<br>    cursor: pointer;<br>  &#125;<br><br>  .ul-week &#123;<br>    display: flex;<br>    justify-content: space-between;<br>    width: 100%;<br>    // margin: 5px 20px;<br>    margin: 0;<br>    margin: 8px 0;<br>    padding: 0 10px;<br>    // border-bottom: 1px solid #eee;<br>    color: #000;<br>    font-size: 13px;<br>    list-style: none;<br>    text-align: center;<br>  &#125;<br><br>  .li-week &#123;<br>    display: inline-block;<br>  &#125;<br><br>  .ul-day &#123;<br>    display: grid;<br>    grid-template-columns: repeat(7, 30px);<br>    grid-template-rows: repeat(6, 30px);<br>    align-items: start;<br>    justify-content: space-between;<br>    width: 100%;<br>    margin-bottom: 0;<br>    list-style: none;<br>    text-align: center;<br>  &#125;<br><br>  .li-day &#123;<br>    display: inline-block;<br>    margin: 1px;<br>    border-radius: 5px;<br>    color: #000;<br>    font-size: 13px;<br>    line-height: 25px;<br>    text-align: center;<br>  &#125;<br><br>  .li-day:hover &#123;<br>    background-color: #1c67e5;<br>    color: #fff;<br>    cursor: pointer;<br>  &#125;<br><br>  .li-day[isThisMonth=&#x27;1&#x27;] &#123;<br>    color: rgb(190 190 190);<br>    font-size: 13px;<br>  &#125;<br><br>  .li-day[isThisMonth=&#x27;1&#x27;]:hover &#123;<br>    background-color: #1c67e5;<br>    color: #fff;<br>    font-size: 15px;<br>    cursor: pointer;<br>  &#125;<br><br>  .li-day[isThisMonth=&#x27;3&#x27;] &#123;<br>    border-radius: 5px;<br>    background-color: #1c67e5;<br>    color: rgb(255 255 255);<br>    font-weight: 600;<br>  &#125;<br>&lt;/style&gt;<br><br></code></pre></td></tr></table></figure>

<p><code>props</code>文件</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> interface <span class="hljs-title class_">Idate</span> &#123;<br>  <span class="hljs-attr">year</span>: string | number;<br>  <span class="hljs-attr">month</span>: string | number;<br>  <span class="hljs-attr">date</span>: string | number;<br>  isThisMonth?: any;<br>  h?: number | string;<br>  m?: number | string;<br>  s?: number | string;<br>&#125;<br><br><span class="hljs-keyword">export</span> interface <span class="hljs-title class_">IDateDate</span> &#123;<br>  <span class="hljs-comment">/**时间 Date格式 */</span><br>  <span class="hljs-attr">$d</span>: <span class="hljs-title class_">Date</span>;<br>  <span class="hljs-comment">/**年*/</span><br>  <span class="hljs-attr">$Y</span>: string | number;<br>  <span class="hljs-comment">/**月*/</span><br>  <span class="hljs-attr">$M</span>: string | number;<br>  <span class="hljs-comment">/**日*/</span><br>  <span class="hljs-attr">$D</span>: string | number;<br>  <span class="hljs-comment">/**时*/</span><br>  <span class="hljs-attr">$H</span>: string | number;<br>  <span class="hljs-comment">/**分*/</span><br>  <span class="hljs-attr">$m</span>: string | number;<br>  <span class="hljs-comment">/**秒*/</span><br>  <span class="hljs-attr">$s</span>: string | number;<br>  <span class="hljs-comment">/**日期 年月日*/</span><br>  <span class="hljs-attr">$date</span>: string;<br>  <span class="hljs-comment">/**时间 时分秒*/</span><br>  <span class="hljs-attr">$time</span>: string;<br>&#125;<br><br></code></pre></td></tr></table></figure>

<p>其中有一些样式用到了windcss 使用前可以先装一下哦 不然会有的变形不想装的也可以自己补下css</p>
<p>用法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><code class="hljs javascript">&lt;<span class="hljs-title class_">DatePicker</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;mr-4&quot;</span> @change=<span class="hljs-string">&quot;datePickerChangeHandel&quot;</span> @ok=<span class="hljs-string">&quot;okHandel&quot;</span> /&gt;<br></code></pre></td></tr></table></figure>

<p>然后数据是这样的</p>
<p><a href="https://imgse.com/i/pid7V0J"><img src="https://z1.ax1x.com/2023/11/23/pid7V0J.png" alt="pid7V0J.png"></a></p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
</search>
